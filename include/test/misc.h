/********************************************************************
 * .h
 *
 *  Auto-generated by lst2h.awk
 *
 *******************************************************************/

#define     LOAD_ADDRESS    0x0000      // Change as required
#define     RUN_ADDRESS     0x0000      // Change as required

int code[] =
{
    /* Auto generated from misc.lst
     */
                                        //      ;
                                        //      ; misc.asm
                                        //      ;
                                        //      ; MC6809E emulator test code for compare and value move.
                                        //      ; All tests will use direct or immediate addressing for simplicity,
                                        //      ; other addressing modes will be tested separately.
                                        //      ;
    0x7e, 0x00, 0x0a,                   // 0000             jmp     start
                                        //      ;
                                        // 0001 setcf:      equ     $01
                                        // 00fe clrcf:      equ     $fe
                                        //      ;
                                        // 0003 varstart    equ     *
                                        //      ;
    0xff,                               // 0003 var0:       fcb     $ff
    0x55,                               // 0004 var1:       fcb     $55
    0xaa,                               // 0005 var2:       fcb     $aa
    0x01,                               // 0006 var3:       fcb     $01
    0x80,                               // 0007 var4:       fcb     $80
    0x00,                               // 0008 var5:       fcb     $00
                                        //      ;
                                        // 0009 varend:     equ     *
                                        // 0006 varlen:     equ     varend-varstart
                                        //      ;
    0x00,                               // 0009 temp:       fcb     0
                                        //      ;
    0x1c, 0x00,                         // 000a start:      andcc   #0              ; zero CC bits
                                        //      ;
                                        //      ;   TST
                                        //      ;
    0x96, 0x04,                         // 000c             lda     var1
    0xd6, 0x05,                         // 000e             ldb     var2
    0x1a, 0x0f,                         // 0010             orcc    #$0f            ; flags NZVC
    0x4d,                               // 0012             tsta                    ; flags nzvC
    0x5d,                               // 0013             tstb                    ; flags NzvC
    0x0d, 0x09,                         // 0014             tst     temp            ; flags nZvC
                                        //      ;
                                        //      ;   EXG
                                        //      ;
    0x96, 0x03,                         // 0016             lda     var0
    0xd6, 0x04,                         // 0018             ldb     var1
    0x1e, 0x89,                         // 001a             exg     a,b
    0x9e, 0x05,                         // 001c             ldx     var2
    0x1e, 0x01,                         // 001e             exg     d,x
                                        //      ;
                                        //      ;   TFR
                                        //      ;
    0x1f, 0x12,                         // 0020             tfr     x,y
    0x1f, 0x20,                         // 0022             tfr     y,d
    0x1f, 0x03,                         // 0024             tfr     d,u
                                        //      ;
                                        //      ;   SEX
                                        //      ;
    0xd6, 0x04,                         // 0026             ldb     var1
    0x1d,                               // 0028             sex
    0xd6, 0x05,                         // 0029             ldb     var2
    0x1d,                               // 002b             sex
                                        //      ;
                                        //      ;   BIT
                                        //      ;
    0x86, 0x55,                         // 002c             lda     #$55
    0x95, 0x06,                         // 002e             bita    var3
    0x95, 0x07,                         // 0030             bita    var4
    0xc6, 0xaa,                         // 0032             ldb     #$aa
    0xd5, 0x07,                         // 0034             bitb    var4
    0xd5, 0x06,                         // 0036             bitb    var3
                                        //      ;
    0x12,                               // 0038             nop
                                        //      ;
                                        //      ; End of test
   -1,                                  // --- end of code ---
};
